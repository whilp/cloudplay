#!/usr/bin/env python

import json
import logging
import sys

import requests

from collections import namedtuple
from itertools import count
from pprint import pprint

from urllib import urlencode
from urlparse import urljoin

OFFICIALFM_ID = 'IvU9WMP8r3l3n5CJYgf3'

log = logging.getLogger(__name__)

def main():
    log.level = logging.DEBUG
    log.addHandler(logging.StreamHandler())

    client = SoundCloud()
    client.session = requests.session()
    client.get = client.session.get
    tracks = (
        Track(
            location=track['stream_url'],
            creator=track['user']['username'],
            title=track['title'])
        for track in client.list('/users/four-tet/tracks')
        if track['streamable'])
    list(tracks)

Track = namedtuple('Track', 'location creator title')

class SoundCloud(object):
    url = 'https://api.soundcloud.com/'
    client_id = 'bed25dba5cb38c07ca8d5bb9d92eb0a8'
    limit = 200
    format = 'json'

    def list(self, collection, **query):
        url = urljoin(self.url, collection)
        params = dict(
            client_id=self.client_id,
            format=self.format,
            limit=self.limit,
            offset = 0,
            )
        params.update(query)
        
        url = urljoin(self.url, collection)

        while True:
            requrl = url + '?' + urlencode(params)
            log.debug('GET %s', requrl)
            response = self.get(requrl)
            items = json.loads(response.text)
            params['offset'] += len(items)
            log.debug('received %d items', len(items))
            if not items:
                return
            for item in items:
                yield item

    get = requests.get

main()
